html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-weight: inherit;
  font-style: inherit;
  font-family: inherit;
  font-size: 100%;
  vertical-align: baseline;
}
body {
  line-height: 1;
  color: #000;
  background: #fff;
}
ol,
ul {
  list-style: none;
}
table {
  border-collapse: separate;
  border-spacing: 0;
  vertical-align: middle;
}
caption,
th,
td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}
a img {
  border: none;
}
.cf {
  zoom: 1;
}
.cf:before,
.cf:after {
  content: "";
  display: table;
}
.cf:after {
  clear: both;
}
body {
  background: url("../img/back.png");
}
.wrap {
  margin: 0 auto;
  min-height: 100%;
  font-family: Bemount Line;
  width: 1050px;
}
@media (max-width: 512px) {
  .wrap {
    width: 300px;
  }
}
@media (min-width: 512px) and (max-width: 817px) {
  .wrap {
    width: 480px;
  }
}
@media (min-width: 817px) and (max-width: 1067px) {
  .wrap {
    width: 800px;
  }
}
.header {
  width: 100%;
  background: rgba(70,132,110,0.7);
  height: 95px;
  color: #181818;
  letter-spacing: 4px;
  border-bottom: 1px solid #fff9fc;
  -webkit-box-shadow: 0 2px 5px 0 rgba(0,0,0,0.078);
  box-shadow: 0 2px 5px 0 rgba(0,0,0,0.078);
}
@media (max-width: 512px) {
  .header {
    height: 65px;
  }
}
.logo {
  width: 80px;
  height: 81px;
  margin: 0 auto;
}
.logo:hover {
  cursor: pointer;
}
@media (max-width: 512px) {
  .imgLogo {
    width: 50px;
    height: 51px;
  }
}
.headNav {
  margin: -20px 50px 0;
  text-align: left;
  font-size: 22px;
}
@media (max-width: 512px) {
  .headNav {
    margin: -55px 0px 0;
    font-size: 16px;
  }
}
@media (min-width: 513px) and (max-width: 700px) {
  .headNav {
    margin: -20px -45px 0;
    font-size: 18px;
  }
}
@media (min-width: 700px) and (max-width: 815px) {
  .headNav {
    margin: -20px -40px 0;
    font-size: 20px;
  }
}
ul li {
  list-style-type: none;
  display: inline;
}
ul li a {
  text-decoration: none;
  padding: 5px 40px;
}
ul li a:link,
ul li a:visited {
  color: #fff;
  border: none;
}
ul li a:hover,
ul li a:active {
  color: #234338;
  border-bottom: 2px solid #234338;
  -webkit-transition: all 0.2s;
  -moz-transition: all 0.2s;
  -o-transition: all 0.2s;
  -ms-transition: all 0.2s;
  transition: all 0.2s;
}
@media (max-width: 1024px) and (min-width: 513px) {
  ul li a {
    padding: 5px 15px;
  }
}
@media (max-width: 512px) {
  ul li a {
    padding: 5px;
  }
}
.headFilter.active {
  border-bottom: 2px solid #234338;
  color: #234338;
}
.addBut {
  float: right;
  margin: -30px 30px 0;
}
@media (max-width: 512px) {
  .addBut {
    margin: -20px 0;
  }
}
.addRecipe {
  width: 150px;
  height: 35px;
  background: rgba(255,249,252,0.5);
  font-family: Bemount Line;
  font-size: 16px;
  line-height: 18px;
  color: #152821;
  letter-spacing: 2px;
  border: none;
  -webkit-border-radius: 5px;
  border-radius: 5px;
  outline: none;
}
.addRecipe:hover {
  cursor: pointer;
}
.addRecipe:active,
.addRecipe:focus {
  outline: none;
}
@media (max-width: 1057px) and (min-width: 817px) {
  .addRecipe {
    width: 200px;
  }
}
@media (max-width: 817px) and (min-width: 512px) {
  .addRecipe {
    width: 150px;
  }
}
@media (max-width: 512px) {
  .addRecipe {
    width: 100px;
    height: 20px;
  }
}
.sideNav {
  margin: 150px 0 0;
  width: 50px;
}
.navSel {
  width: 50px;
  height: 50px;
  margin: 15px 0 0;
  border: 5px solid #3f7864;
  font-family: Bemount Line;
}
.navSel:hover {
  width: 250px;
  -webkit-transition: 0.2s linear 0.2s;
  -moz-transition: 0.2s linear 0.2s;
  -o-transition: 0.2s linear 0.2s;
  -ms-transition: 0.2s linear 0.2s;
  transition: 0.2s linear 0.2s;
  cursor: pointer;
  position: relative;
  z-index: 99999;
}
.navSel:not(:hover) {
  -webkit-transition: 0.2s linear 0.2s;
  -moz-transition: 0.2s linear 0.2s;
  -o-transition: 0.2s linear 0.2s;
  -ms-transition: 0.2s linear 0.2s;
  transition: 0.2s linear 0.2s;
}
.chi {
  background: url("../img/chicken.png") no-repeat center left;
}
.chi:hover {
  background: url("../img/chicken_hover.png") no-repeat center left, #3f7864;
}
.chi:not(:hover) {
  -webkit-transition: 0.8s linear 0.2s;
  -moz-transition: 0.8s linear 0.2s;
  -o-transition: 0.8s linear 0.2s;
  -ms-transition: 0.8s linear 0.2s;
  transition: 0.8s linear 0.2s;
}
.chi.active {
  background: url("../img/chicken_hover.png") no-repeat center left, #3f7864;
}
.la {
  background: url("../img/lamb.png") no-repeat center left;
}
.la:hover {
  background: url("../img/lamb_hover.png") no-repeat center left, #3f7864;
}
.la:not(:hover) {
  -webkit-transition: 0.8s linear 0.2s;
  -moz-transition: 0.8s linear 0.2s;
  -o-transition: 0.8s linear 0.2s;
  -ms-transition: 0.8s linear 0.2s;
  transition: 0.8s linear 0.2s;
}
.la.active {
  background: url("../img/lamb_hover.png") no-repeat center left, #3f7864;
}
.fi {
  background: url("../img/fish.png") no-repeat center left;
}
.fi:hover {
  background: url("../img/fish_hover.png") no-repeat center left, #3f7864;
}
.fi:not(:hover) {
  -webkit-transition: 0.8s linear 0.2s;
  -moz-transition: 0.8s linear 0.2s;
  -o-transition: 0.8s linear 0.2s;
  -ms-transition: 0.8s linear 0.2s;
  transition: 0.8s linear 0.2s;
}
.fi.active {
  background: url("../img/fish_hover.png") no-repeat center left, #3f7864;
}
.navSel.active {
  width: 50px;
  height: 50px;
}
.t_filer {
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  visibility: hidden;
  padding: 15px 120px 0;
  font-size: 32px;
  line-height: 34px;
  color: #000;
}
.navSel:not(.active):hover .t_filer {
  opacity: 1;
  -ms-filter: none;
  filter: none;
  visibility: visible;
  -webkit-transition: opacity 0.3s, visibility 0.5s linear 0.3s;
  -moz-transition: opacity 0.3s, visibility 0.5s linear 0.3s;
  -o-transition: opacity 0.3s, visibility 0.5s linear 0.3s;
  -ms-transition: opacity 0.3s, visibility 0.5s linear 0.3s;
  transition: opacity 0.3s, visibility 0.5s linear 0.3s;
  -webkit-transition-delay: 0.3s;
  -moz-transition-delay: 0.3s;
  -o-transition-delay: 0.3s;
  -ms-transition-delay: 0.3s;
  transition-delay: 0.3s;
}
.hidding {
  visibility: hidden;
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  -webkit-transition: 0.3s;
  -moz-transition: 0.3s;
  -o-transition: 0.3s;
  -ms-transition: 0.3s;
  transition: 0.3s;
  -webkit-transition-delay: 0s;
  -moz-transition-delay: 0s;
  -o-transition-delay: 0s;
  -ms-transition-delay: 0s;
  transition-delay: 0s;
}
#Container .mix {
  display: none;
}
#Container {
  margin: -280px auto;
}
@media (max-width: 1150px) {
  #Container {
    margin-left: 90px;
  }
}
.mix {
  width: 300px;
  height: 400px;
  float: left;
  margin: 15px 20px;
  background: rgba(70,132,110,0.5);
  border: 1px solid #fff9fc;
  -webkit-border-radius: 5px;
  border-radius: 5px;
  -webkit-box-shadow: 0 2px 5px 0 rgba(0,0,0,0.2);
  box-shadow: 0 2px 5px 0 rgba(0,0,0,0.2);
}
.cardPic {
  width: 100%;
  height: 100%;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}
.PicsDiv {
  width: 100%;
  height: 40%;
}
.cardTitle {
  font-size: 20px;
  line-height: 22px;
  color: #353535;
  font-family: "Merriweather";
  padding: 10px 5px 0;
}
.garnirTitle {
  font-size: 28px;
  line-height: 30px;
  color: #353535;
  font-family: "Merriweather";
  padding: 15px 5px 0;
  text-align: center;
  word-wrap: break-word;
}
.dishComposition {
  font-size: 16px;
  line-height: 18px;
  color: #353535;
  font-family: "Merriweather";
  padding: 45px 5px 0;
  text-align: right;
}
.mask {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.3);
  z-index: 50;
  visibility: hidden;
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  -webkit-transition: 0.7s;
  -moz-transition: 0.7s;
  -o-transition: 0.7s;
  -ms-transition: 0.7s;
  transition: 0.7s;
}
.modal {
  position: fixed;
  top: 15%;
  left: 50%;
  width: 500px;
  height: 400px;
  margin-left: -200px;
  background: url("../img/back.png");
  z-index: 100;
  visibility: hidden;
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  -webkit-transition: 0.5s ease-out;
  -moz-transition: 0.5s ease-out;
  -o-transition: 0.5s ease-out;
  -ms-transition: 0.5s ease-out;
  transition: 0.5s ease-out;
  -webkit-transform: translateY(45px);
  -moz-transform: translateY(45px);
  -o-transform: translateY(45px);
  -ms-transform: translateY(45px);
  transform: translateY(45px);
  -webkit-border-radius: 5px;
  border-radius: 5px;
}
.adActive {
  visibility: visible;
  opacity: 1;
  -ms-filter: none;
  filter: none;
}
.adActive + .modal {
  visibility: visible;
  opacity: 1;
  -ms-filter: none;
  filter: none;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -o-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
}
.close {
  position: absolute;
  top: 0;
  right: 0;
  width: 35px;
  height: 30px;
  background: transparent;
  cursor: pointer;
  border: 0;
  outline: none;
}
.description {
  width: 100%;
  height: 56%;
}
.browseRecipe {
  width: 100%;
  height: 40%;
}
.browseDiv {
  padding-top: 100px;
  padding-left: 40%;
  font-family: "Merriweather";
  color: #2e2e2e;
}
.name {
  margin: 25px 15px 0;
  width: 350px;
  height: 30px;
  background: transparent;
  font-size: 18px;
  line-height: 20px;
  color: #181818;
  float: left;
}
.composition {
  font-size: 16px;
  line-height: 18px;
  color: #181818;
}
.Mingr {
  width: 200px;
  height: 30px;
  background: transparent;
  text-align: right;
  margin: 60px 15px 15px 55%;
}
.ingr {
  width: 98%;
  height: 30px;
  background: transparent;
  margin: 35px 0 0 5px;
  white-space: nowrap;
}
.Dish {
  outline: none;
  border: none;
  border-bottom: 2px solid #3a614c;
  font-family: "Merriweather";
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
}
::-webkit-input-placeholder {
  font-style: italic;
  font-size: 16px;
  line-height: 18px;
  color: #6b7468;
}
.typeof {
  float: left;
  margin-top: 25px;
  margin-left: 16px;
  width: 268px;
  height: 34px;
  overflow: hidden;
  background: url("../img/new_arrow.png") no-repeat right rgba(162,193,182,0.805);
  border: 1px solid #5ea38c;
  -webkit-border-radius: 5px;
  border-radius: 5px;
}
.typeof select {
  background: transparent;
  width: 268px;
  padding: 5px;
  font-size: 16px;
  line-height: 1;
  border: 0;
  -webkit-border-radius: 0;
  border-radius: 0;
  height: 34px;
  -webkit-appearance: none;
  -moz-appearance: none;
  font-family: "Merriweather";
  color: #1b231a;
  letter-spacing: 1px;
}
.typeof select:hover {
  cursor: pointer;
}
.sent {
  width: 150px;
  height: 35px;
  background: rgba(162,193,182,0.805);
  font-size: 16px;
  line-height: 18px;
  color: #152821;
  letter-spacing: 1px;
  border: 1px solid #5ea38c;
  -webkit-border-radius: 5px;
  border-radius: 5px;
  outline: none;
  font-family: "Merriweather";
  margin: 20px 35%;
}
.sent:hover {
  cursor: pointer;
}
.addPicture {
  width: 0.1px;
  height: 0.1px;
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  overflow: hidden;
  position: absolute;
  z-index: -1;
}
.addPicture + label {
  height: 50px;
  white-space: nowrap;
  display: inline-block;
  overflow: hidden;
  padding: 0.625rem 1.25rem;
  font-size: 18px;
  color: #1e241c;
  font-family: "Merriweather";
  letter-spacing: 1px;
}
.addPicture {
  display: none;
}
.addPicture + label span,
.addPicture + label strong {
  padding: 0.625rem 1.25rem;
}
.addPicture + label span {
  width: 200px;
  min-height: 1em;
  display: inline-block;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  vertical-align: top;
  border: 1px solid rgba(52,99,82,0.7);
  background: rgba(162,193,182,0.805);
  border-top-left-radius: 5px;
  border-bottom-left-radius: 5px;
}
.addPicture + label strong {
  height: 1em;
  display: inline-block;
  background: rgba(70,132,110,0.7);
  border: 1px solid rgba(52,99,82,0.7);
  border-top-right-radius: 5px;
  border-bottom-right-radius: 5px;
}
.addPicture:focus + label strong,
.addPicture.has-focus + label strong,
.addPicture + label:hover strong {
  border-color: rgba(52,99,82,0.7);
  background: rgba(52,99,82,0.7);
  cursor: pointer;
}
#footer {
  position: fixed;
  bottom: 0;
  left: 0;
  padding: 10px;
  background: rgba(70,132,110,0.5);
  color: #000;
  width: 100%;
}

/*# sourceMappingURL=data:application/json;base64, */
